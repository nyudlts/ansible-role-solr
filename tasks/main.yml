---
- import_tasks: user.yml
  when: solr_create_user

- name: Set solr_filename for Solr 4+.
  set_fact:
    solr_filename: "solr-{{ solr_version }}"
  when: "solr_version.split('.')[0] >= '4'"

- name: Set solr_filename for Solr 3.x.
  set_fact:
    solr_filename: "apache-solr-{{ solr_version }}"
  when: "solr_version.split('.')[0] == '3'"

  # I don't like this, it's both brittle and general
  # -  It's only looking for a directory
  #   The install operation should only run if the contents of
  #   the install artifact differ from the installed source.
  #   hence rpms are proper artifacts because they ahve installation
  #   metadata, but how do we deal with installing from tarbals?
  #-  Can we install from Maven Central?
- name: Check if Solr has been installed already.
  stat:
    path: "{{ solr_install_path }}"
  register: solr_install_path_status

- name: Setup install dir - solr_workspace
  file:
    path: "{{ solr_workspace }}"
    state: directory
    mode: 0755

  # Since solr and jetty are both java projects it would be nicer to
  # pull from Maven Central with mvn.
- name: Download Solr.
  get_url:
    url: "{{ solr_mirror }}/lucene/solr/{{ solr_version }}/{{ solr_filename }}.tgz"
    dest: "{{ solr_workspace }}/{{ solr_filename }}.tgz"
    force: false
  when: solr_install_path_status.stat.isdir is not defined
  register: solr_download_status

- name: Expand Solr.
  unarchive:
    src: "{{ solr_workspace }}/{{ solr_filename }}.tgz"
    dest: "{{ solr_workspace }}"
    copy: false
  when: solr_download_status.changed
  tags: ['skip_ansible_lint']

# Install Solr < 5.
- include_tasks: install-pre5.yml
  when: "solr_version.split('.')[0] < '5'"

# Install Solr 5+.
- include_tasks: install.yml
  when: "solr_version.split('.')[0] >= '5'"

# Check if Solr service already exists
- name: Check if service exists already
  stat:
    path: /lib/systemd/system/solr.service
  register: service_exists

# Configur Solr service if it exists
- name: Ensure solr is started and enabled on boot if configured.
  service:
    name: "{{ solr_service_name }}"
    state: "{{ solr_service_state }}"
    enabled: true
  when: solr_service_manage and service_exists.stat.exists == True

# Configure solr.
- include_tasks: configure.yml
  when: "solr_version.split('.')[0] >= '5'"

# Wait a few seconds for Solr to start
- name: Wait a few seconds for Solr to start
  pause:
    seconds: 10

# Create cores, if any are configured.
- include_tasks: cores.yml
  when: "solr_cores and solr_version.split('.')[0] >= '5'"

- include_tasks: cleanup.yml

# Apply custom Jetty config with whitelisting
- include_tasks: jetty.yml

# Configure solr as systemd service if it doesn't exist
- name: Create the file, if it doesn't exist already
  include_tasks: service.yml
  when: service_exists.stat.exists == False
